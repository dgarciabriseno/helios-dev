import Config from '../src/Configuration';
import { ToDateString } from '../src/common/dates';
import { ToCoordinates } from "../src/API/common";
import { Helios } from "../src/API/helios";

test('Get observer position', async () => {
    let value = await Helios.GetJp2Observer(148764020);
    expect(value).toHaveProperty('x')
    expect(value).toHaveProperty('y')
    expect(value).toHaveProperty('z')
})

test("Saving and loading scene", async () => {
    let testLayers = [
        {
            source: 13,
            start: new Date(),
            end: new Date(),
            cadence: 86400,
            scale: 0.6,
        },
    ];
    let sceneData = {
        created_at: new Date(),
        start: new Date(),
        end: new Date(),
        shared: false,
        thumbnail: "Test thumbnail",
        layers: testLayers,
    };
    let result = await Helios.SaveScene(sceneData);
    expect(result).not.toHaveProperty("error");
    expect(typeof result).toBe("number");

    let loadedScene = await Helios.LoadScene(result);
    sceneData.start.setMilliseconds(0);
    expect(loadedScene.start).toStrictEqual(sceneData.start);
}, 3600000);

test("Loading a scene", async () => {
    let result = await Helios.LoadScene(1);
    expect(result).not.toHaveProperty("error");
    expect(result).toHaveProperty("id");
    expect(result).toHaveProperty("layers");
    expect(result["layers"].length).toBeGreaterThan(0);
});
test("Test the date", async () => {
    let result = await Helios.get_field_lines_gong([new Date()]);
    expect(Array.isArray(result)).toBe(true);
});

test("Get earth position", async () => {
    // Confirm that getting the earth position works the same way it worked
    // before changing to the autogenerated API
    let date = new Date();
    let url = Config.helios_api_url + "/earth/" + ToDateString(date);
    let response = await fetch(url);
    let data = await response.json();
    let coord = ToCoordinates(data);
    let otherCoord = await Helios.GetEarthPosition(date);
    expect(coord).toStrictEqual(otherCoord);
})